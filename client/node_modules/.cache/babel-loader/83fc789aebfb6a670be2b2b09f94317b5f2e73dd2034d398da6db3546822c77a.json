{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrikas\\\\Desktop\\\\Code\\\\Interships\\\\cryptocurrencies-ibm\\\\client\\\\src\\\\components\\\\CryptoContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoContext = /*#__PURE__*/createContext();\nexport function useCryptoContext() {\n  _s();\n  return useContext(CryptoContext);\n}\n_s(useCryptoContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function CryptoProvider({\n  children\n}) {\n  _s2();\n  const [topTenCryptos, setTopTenCryptos] = useState([]);\n  const updateTopTenCryptos = data => {\n    setTopTenCryptos(data);\n  };\n  return /*#__PURE__*/_jsxDEV(CryptoContext.Provider, {\n    value: {\n      topTenCryptos,\n      updateTopTenCryptos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s2(CryptoProvider, \"pp2xCsta+0yeMFazi5k8R6yP/Kw=\");\n_c = CryptoProvider;\nvar _c;\n$RefreshReg$(_c, \"CryptoProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CryptoContext","useCryptoContext","_s","CryptoProvider","children","_s2","topTenCryptos","setTopTenCryptos","updateTopTenCryptos","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Patrikas/Desktop/Code/Interships/cryptocurrencies-ibm/client/src/components/CryptoContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst CryptoContext = createContext();\r\n\r\nexport function useCryptoContext() {\r\n  return useContext(CryptoContext);\r\n}\r\n\r\nexport function CryptoProvider({ children }) {\r\n  const [topTenCryptos, setTopTenCryptos] = useState([]);\r\n\r\n  const updateTopTenCryptos = (data) => {\r\n    setTopTenCryptos(data);\r\n  };\r\n\r\n  return (\r\n    <CryptoContext.Provider value={{ topTenCryptos, updateTopTenCryptos }}>\r\n      {children}\r\n    </CryptoContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,SAASM,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,OAAON,UAAU,CAACI,aAAa,CAAC;AAClC;AAACE,EAAA,CAFeD,gBAAgB;AAIhC,OAAO,SAASE,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,mBAAmB,GAAIC,IAAI,IAAK;IACpCF,gBAAgB,CAACE,IAAI,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEL,aAAa;MAAEE;IAAoB,CAAE;IAAAJ,QAAA,EACnEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACV,GAAA,CAZeF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}